10.05.2011 version 0.02
Second release version comes with copy mappings where the mapping can be done from one instance to another by copying member values instead of creating a new destination object. Also the Ignore got smarter.
Features:
- Mapping is possible to an already instantiated object with Mapper.Map<TSource,TDestination>(sourceObj, destObj)
- Ignore now has a parameter ignoreOnCopy with default true. If true Mapper.Map(source,destination) behaves same as Mapper.Map(source) when ignoring members. If set to false, it has no efect on copy mappings but behaves as nomral on mappings that create a new instance of destination type.
- IgnoreMapAttribute has been added to help simplify the mapping rules for autogenerated code.

08.05.2011 Version 0.01
First Release version. All basic functionality implemented and tested.
Features:
- for primitive types the types must be convertible.
- basic collection from System.Collections.Generic can be mapped to and from.
- arrays of same type will be just copied to destination
- string type members are converted without problems.
- any type of Enum will be mapped to any type of Enum.
- structures will be mapped if are the same type. For different types a mapping will have to be defined.
- for custom mappings only the top-level members can be set as source member.
- AssertConfigurationIsValid method to check that all destination members have a mapping rule and that all related configurations are defined.
- Unit Tests for code quality.

Not supported:
- mapping from decimal to any other type.
- mapping members of type Dictionary
- mapping arrays of one type to another.
- mapping internal types.